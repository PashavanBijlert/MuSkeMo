clear;
%% This Matlab script plots the outputs from a moment arm analysis generated by MuSkeMo.

set(groot, 'defaultFigureColor', 'white');


%% Define the directory containing the CSV files. 
%This needs to be the same as the output folder you defined in the script in MuSkeMo
csv_dir = fullfile(pwd, 'muscle_analysis'); % Assuming the subdirectory is in the current working directory

%% Get a list of all CSV files in the directory
csv_files = dir(fullfile(csv_dir, '*.csv'));


%% Create First Figure (4x4 layout)
fig = figure;
fig.Units = 'centimeters';
fig.Position(2) = 3;
fig.Position(3) = 18;
fig.Position(4) = 16;
t1 = tiledlayout(fig, 4, 4, "TileSpacing", "tight", "Padding", "tight");

%% Create Second Figure (1x3 layout)
fig2 = figure;
fig2.Units = 'centimeters';
fig2.Position(2) = 3;
fig2.Position(3) = 18;
fig2.Position(4) = 6; % Adjusted for a single-row layout
t2 = tiledlayout(fig2, 1, 3, "TileSpacing", "tight", "Padding", "tight");

%% Initialize storage for legends for each subplot
legend_entries = {[], [], []}; % Store muscle names separately for hip, knee, ankle
legend_handles = {[], [], []}; % Store plot handles separately

%% Loop through each CSV file
for i = 1:length(csv_files)
    % Get the full path of the current CSV file
    csv_path = fullfile(csv_dir, csv_files(i).name);
    
    % Read the CSV file into a table
    data = readtable(csv_path);
    
    % Extract column names and data
    joint_angle = data{:, 1}; % First column: joint angles
    moment_arm = data{:, 3}; % Third column: moment arms
    joint_name = strrep(data.Properties.VariableNames{1},'_angle_rad_',''); % Header for joint angle
    muscle_name_with_joint = csv_files(i).name; % CSV file name with extension
    
    % Extract the muscle name (minus the joint name and '.csv')
    [~, muscle_name_with_joint, ~] = fileparts(muscle_name_with_joint); % Remove '.csv'
    muscle_name = strrep(muscle_name_with_joint, joint_name, '');
    muscle_name = strip(muscle_name,'_');
    

    %% Plot in First Figure (Main Figure)
    figure(fig); % Ensure fig is active
    nexttile(t1);
    plot(joint_angle, moment_arm, '-', 'LineWidth', 1.5);
    xlabel([strrep(joint_name,'_',' ') ' angle (rad)']); % X-axis label
    ylabel('Moment arm (m)'); % Y-axis label
    title(['Muscle: ' strrep(muscle_name,'_',' ')]); % Title with muscle name
    grid on;
   
    letter = char(i + 'A' - 1);
    text(0.05, 0.9, letter, 'Units', 'Normalized', 'FontSize', 12) 
    
    

    %% Determine Tile Index in fig2 Based on Joint Name
    if contains(joint_name, 'hip', 'IgnoreCase', true)
        tile_idx = 1;
    elseif contains(joint_name, 'knee', 'IgnoreCase', true)
        tile_idx = 2;
    elseif contains(joint_name, 'ankle', 'IgnoreCase', true)
        tile_idx = 3;
    else
        continue; % Skip if it doesn't match any category
    end



    %% Plot in Second Figure (1x3 layout)
    figure(fig2); % Ensure fig2 is active
    ax = nexttile(t2, tile_idx); % Get correct tile
    hold(ax, 'on'); % Enable multiple plots per tile

    p1 = plot(ax, joint_angle, moment_arm, '-', 'LineWidth', 2); % MuSkeMo (color auto)
    
    xlabel(ax, [strrep(joint_name,'_',' ') ' angle (rad)']);
    
    if tile_idx == 1

    ylabel(ax, 'Moment arm (m)');
    end
    title(ax, [strrep(joint_name,'_',' ') ' Moment Arms']);
    grid(ax, 'on');

    % Store MuSkeMo plots and muscle names for the respective subplot
    legend_handles{tile_idx}(end+1) = p1; % Append MuSkeMo plot handle
    legend_entries{tile_idx}{end+1} = [strrep(muscle_name, '_', ' ')]; % Append muscle name


end

%% Create a legend for the second figure
for tile_idx = 1:3
    ax = nexttile(t2, tile_idx); % Get corresponding tile
    if ~isempty(legend_handles{tile_idx})
        legend(ax, legend_handles{tile_idx}, legend_entries{tile_idx}, 'Location', 'southoutside');
    end
end


